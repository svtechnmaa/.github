name: Docker Image Scan and Mail
description: Scan Docker image with Trivy, show results, and send mail if HIGH/CRITICAL vulnerabilities detected

inputs:
  image_name:
    description: "Docker image name to scan"
    required: true
  image_tag:
    description: "Docker image tag to scan"
    required: false
    default: "latest"
  trivy_server:
    description: "Trivy server URL (if using server mode)"
    required: false
    default: ""
  mail_username:
    description: "SMTP username for sending email"
    required: true
  mail_password:
    description: "SMTP password for sending email"
    required: true
  commit_author_name:
    description: "Name of commit author to include in email"
    required: true
  commit_author_email:
    description: "Email of commit author to include in email"
    required: true
  commit_id:
    description: "Commit ID associated with this scan"
    required: true
  job_id:
    description: "GitHub job ID for the current workflow run"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Scan Docker image
      shell: bash
      run: |
        echo "🔍 Checking Trivy server availability..."
        if curl -s --fail ${{ inputs.trivy_server }}/healthz; then
          echo "✅ Trivy server is UP"
          trivy image --server ${{ inputs.trivy_server }} --timeout 5m --severity HIGH,CRITICAL --format sarif --output trivy-image-report.sarif ${{ inputs.image_name }}:${{ inputs.image_tag }}
        else
          echo "⚠️ Trivy server is DOWN. Falling back to local scan"
          trivy image --timeout 5m --severity HIGH,CRITICAL --format sarif --output trivy-image-report.sarif ${{ inputs.image_name }}:${{ inputs.image_tag }}
        fi
      continue-on-error: true

    - name: Logging detected vulnerabilities
      id: logging_vulns
      shell: bash
      if: steps.scan_docker_image.conclusion == 'success'
      run: |
        issues=$(jq -r '.runs[].tool.driver.rules[]
          | select(.properties.tags | index("HIGH") or index("CRITICAL")) 
          |"
        RuleId: \(.id)
        Severity: \((.properties.tags[] | select(. == "HIGH" or . == "CRITICAL")))
        Score: \(.properties."security-severity")
        Reference: \(.helpUri)
        Message: \(.shortDescription.text)
        -----"
        ' trivy-image-report.sarif)

        if [[ -z "$issues" ]]; then
          echo "✅ No HIGH/CRITICAL vulnerabilities detected"
          echo "detected_vulns=false" >> "$GITHUB_OUTPUT"
        else
          echo "🚨 Detected HIGH/CRITICAL vulnerabilities:"
          echo "$issues"
          echo "detected_vulns=true" >> "$GITHUB_OUTPUT"
        fi
      continue-on-error: true

    - name: Upload SARIF to Security tab
      if: steps.logging_vulns.outputs.detected_vulns == 'true'
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: trivy-image-report.sarif
      continue-on-error: true

    - name: Send mail if vulnerabilities detected
      if: steps.logging_vulns.outputs.detected_vulns == 'true'
      uses: dawidd6/action-send-mail@v4
      with:
        server_address: smtp.gmail.com
        server_port: 465
        secure: true
        username: ${{ inputs.mail_username }}
        password: ${{ inputs.mail_password }}
        subject: "[ALERT] Vulnerabilities Found in Docker Image"
        body: |
          Hello ${{ inputs.commit_author_name }},

          Detected vulnerabilities for commit:
          ${{ github.server_url }}/${{ github.repository }}/commit/${{ inputs.commit_id }}

          View the full report here:

          ${{ github.server_url }}/${{ github.repository }}/security/code-scanning

          or

          ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ inputs.job_id }}

          Please review the details and take appropriate action.

          Best,
          SRE Team
        to: ${{ inputs.commit_author_email }}
        from: kien.kim@svtech.com.vn
      continue-on-error: true
